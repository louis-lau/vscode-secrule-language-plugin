#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const yaml = require('js-yaml');
const prettier = require('prettier');

async function generateDocs() {
	// Read YAML file
	const yamlPath = path.join(__dirname, '../src/documentation.yaml');
	const yamlContent = fs.readFileSync(yamlPath, 'utf8');
	const documentation = yaml.load(yamlContent);

	// Generate TypeScript file
	const tsContent = `// This file is auto-generated from documentation.yaml
// DO NOT EDIT THIS FILE DIRECTLY - edit documentation.yaml instead

export interface DocEntry {
	description: string
	syntax?: string
	example?: string
	whenToUse?: string
	group?: string
	relatedActions?: string[]
}

interface Documentation {
	directives: { [key: string]: DocEntry }
	ctlActions: { [key: string]: DocEntry }
	actions: { [key: string]: DocEntry }
	operators: { [key: string]: DocEntry }
	variables: { [key: string]: DocEntry }
}

export const documentation: Documentation = ${JSON.stringify(documentation, null, 2)}
`;

	// Prettify with Prettier using repo config
	const prettierConfig = await prettier.resolveConfig(path.join(__dirname, '..'));
	const prettified = await prettier.format(tsContent, {
		...prettierConfig,
		parser: 'typescript',
	});

	// Write TypeScript file
	const tsPath = path.join(__dirname, '../src/documentation.ts');
	fs.writeFileSync(tsPath, prettified, 'utf8');

	console.log('âœ“ Generated documentation.ts from documentation.yaml');
}

generateDocs().catch((err) => {
	console.error('Error generating documentation:', err);
	process.exit(1);
});

